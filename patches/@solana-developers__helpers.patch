diff --git a/dist/esm/lib/token.js b/dist/esm/lib/token.js
index d783e9b64576366d885be23e6ddb6d2d7bf36fb6..53c1a6c140f4a38d2ef6023e7fa66ec7df322da8 100644
--- a/dist/esm/lib/token.js
+++ b/dist/esm/lib/token.js
@@ -1,6 +1,6 @@
 import { Keypair, sendAndConfirmTransaction, SystemProgram, Transaction, TransactionMessage, VersionedTransaction } from "@solana/web3.js";
 import { makeKeypairs } from "./keypair.js";
-import { createAssociatedTokenAccountIdempotentInstruction, createInitializeInstruction, createInitializeMetadataPointerInstruction, createInitializeMint2Instruction, createInitializeMintInstruction, createMintToInstruction, ExtensionType, getAssociatedTokenAddressSync, getMinimumBalanceForRentExemptMint, getMintLen, LENGTH_SIZE, MINT_SIZE, TOKEN_2022_PROGRAM_ID, TYPE_SIZE } from "@solana/spl-token";
+import { createAssociatedTokenAccountIdempotentInstruction, createInitializeMint2Instruction, createInitializeMintInstruction, createMintToInstruction, ExtensionType, getAssociatedTokenAddressSync, getMinimumBalanceForRentExemptMint, getMintLen, LENGTH_SIZE, MINT_SIZE, TOKEN_2022_PROGRAM_ID, TYPE_SIZE } from "@solana/spl-token";
 import { confirmTransaction } from "./transaction.js";
 import { createUpdateFieldInstruction, pack } from "@solana/spl-token-metadata";
 const TOKEN_PROGRAM = TOKEN_2022_PROGRAM_ID;
@@ -91,22 +91,9 @@ export const makeTokenMint = async (connection, mintAuthority, name, symbol, dec
         space: mintLength,
         lamports: mintLamports,
         programId: TOKEN_2022_PROGRAM_ID,
-    }), 
-    // Initialize metadata pointer (so the mint points to itself for metadata)
-    createInitializeMetadataPointerInstruction(mint.publicKey, mintAuthority.publicKey, mint.publicKey, TOKEN_2022_PROGRAM_ID), 
+    }),
     // Initialize mint
-    createInitializeMintInstruction(mint.publicKey, decimals, mintAuthority.publicKey, freezeAuthority, TOKEN_2022_PROGRAM_ID), 
-    // Initialize
-    createInitializeInstruction({
-        programId: TOKEN_2022_PROGRAM_ID,
-        mint: mint.publicKey,
-        metadata: mint.publicKey,
-        name: metadata.name,
-        symbol: metadata.symbol,
-        uri: metadata.uri,
-        mintAuthority: mintAuthority.publicKey,
-        updateAuthority: updateAuthority,
-    }), 
+    createInitializeMintInstruction(mint.publicKey, decimals, mintAuthority.publicKey, freezeAuthority, TOKEN_2022_PROGRAM_ID),
     // Update field (actually used to add a custom field)
     // See https://github.com/solana-labs/solana-program-library/blob/master/token/js/examples/metadata.ts#L81C6-L81C6
     // Must come last!
diff --git a/dist/esm/lib/transaction.js b/dist/esm/lib/transaction.js
index c86ccd726fb0bef6e82cd37a6d7c7fc9edef8344..0ec2bfe2463e998b5ad68b618f4d216fec28a0f7 100644
--- a/dist/esm/lib/transaction.js
+++ b/dist/esm/lib/transaction.js
@@ -1,6 +1,7 @@
 import { ComputeBudgetProgram, PublicKey, TransactionMessage, VersionedTransaction, } from "@solana/web3.js";
 import { getErrorFromRPCResponse } from "./logs.js";
-import { Program, AnchorProvider, EventParser, BorshAccountsCoder, BorshInstructionCoder, BN, } from "@coral-xyz/anchor";
+import pkg from '@coral-xyz/anchor';
+const { Program, AnchorProvider, EventParser, BorshAccountsCoder, BorshInstructionCoder, BN, } = pkg;
 import * as fs from "fs";
 import * as path from "path";
 export const confirmTransaction = async (connection, signature, commitment = "confirmed") => {
