{
  "name": "@elizaos/plugin-solana",
  "version": "1.0.3",
  "type": "module",
  "private": true,
  "description": "A plugin for managing liquidity positions on various DEXs.",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/elizaos-plugins/plugin-solana.git"
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.js"
      }
    }
  },
  "files": [
    "dist"
  ],
  "dependencies": {
    "@elizaos/core": "workspace:*",
    "@solana/spl-token": "0.4.13",
    "@solana/web3.js": "^1.98.0",
    "@tanstack/react-query": "^5.62.0",
    "bignumber.js": "9.3.0",
    "bs58": "6.0.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "tailwindcss": "^4.1.10",
    "vite": "^6.3.5",
    "zod": "3.24.2"
  },
  "devDependencies": {
    "@cypress/react": "^9.0.1",
    "@elizaos/cli": "^1.0.0",
    "@eslint/js": "^9.17.0",
    "@tailwindcss/postcss": "^4.1.10",
    "@testing-library/cypress": "^10.0.3",
    "@testing-library/react": "^16.1.0",
    "@types/bun": "^1.2.17",
    "@types/node": "^22.10.6",
    "@types/react": "^18.3.18",
    "@types/react-dom": "^18.3.5",
    "@typescript-eslint/eslint-plugin": "^8.20.0",
    "@typescript-eslint/parser": "^8.20.0",
    "@vitejs/plugin-react-swc": "^3.8.0",
    "autoprefixer": "^10.4.20",
    "c8": "^10.1.3",
    "cypress": "^14.4.1",
    "dotenv": "16.4.5",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.37.3",
    "eslint-plugin-react-hooks": "^5.1.0",
    "postcss": "^8.5.6",
    "prettier": "3.5.3",
    "tsup": "8.4.0",
    "typescript": "5.8.3"
  },
  "scripts": {
    "build": "bun run typecheck && tsup",
    "build:full": "bun run typecheck && vite build && tsup",
    "dev": "elizaos dev",
    "start": "elizaos start",
    "test": "elizaos test",
    "test:unit": "bun test src/__tests__/unit",
    "test:unit:watch": "bun test --watch src/__tests__/unit",
    "test:unit:coverage": "bun test --coverage src/__tests__/unit",
    "test:integration": "bun test src/__tests__/integration",
    "test:integration:devnet": "SOLANA_NETWORK=devnet bun test src/__tests__/integration",
    "test:integration:mainnet": "SOLANA_NETWORK=mainnet-beta bun test src/__tests__/integration",
    "test:integration:testnet": "SOLANA_NETWORK=testnet bun test src/__tests__/integration",
    "test:e2e": "npm run build && elizaos test",
    "test:e2e:mainnet": "SOLANA_NETWORK=mainnet-beta npm run test:e2e",
    "test:e2e:testnet": "SOLANA_NETWORK=testnet npm run test:e2e",
    "test:cypress": "cypress run --component",
    "test:cypress:open": "cypress open --component",
    "test:all": "npm run lint && npm run test:unit:coverage && npm run test:integration && npm run test:e2e && npm run test:cypress",
    "test:all:networks": "npm run test:unit:coverage && npm run test:integration:devnet && npm run test:integration:mainnet",
    "lint": "eslint src --fix && prettier --write ./src",
    "lint:check": "eslint src && prettier --check ./src",
    "lint:fix": "eslint src --fix",
    "typecheck": "tsc --noEmit",
    "format": "prettier --write ./src",
    "format:check": "prettier --check ./src",
    "clean": "rm -rf dist coverage .turbo"
  },
  "gitHead": "646c632924826e2b75c2304a75ee56959fe4a460",
  "agentConfig": {
    "pluginType": "elizaos:plugin:1.0.0",
    "pluginParameters": {
      "SOL_ADDRESS": {
        "type": "string",
        "description": "The mint/contract address used to represent native SOL when interacting with token swap logic.",
        "required": true,
        "sensitive": false
      },
      "SOLANA_RPC_URL": {
        "type": "string",
        "description": "The Solana RPC endpoint the application should connect to.",
        "required": false,
        "default": "https://api.mainnet-beta.solana.com",
        "sensitive": false
      },
      "SOLANA_NETWORK": {
        "type": "string",
        "description": "The Solana network to connect to (mainnet-beta, testnet, devnet).",
        "required": false,
        "default": "mainnet-beta",
        "sensitive": false
      },
      "WALLET_SECRET_SALT": {
        "type": "string",
        "description": "Salt used to derive or encrypt the Solana wallet's secret key; required if the direct secret key is not provided.",
        "required": false,
        "sensitive": false
      },
      "WALLET_SECRET_KEY": {
        "type": "string",
        "description": "Base58-encoded Solana wallet secret (private) key; required if WALLET_SECRET_SALT is not supplied.",
        "required": false,
        "sensitive": true
      },
      "WALLET_PUBLIC_KEY": {
        "type": "string",
        "description": "Base58-encoded Solana wallet public key corresponding to WALLET_SECRET_KEY.",
        "required": false,
        "sensitive": false
      },
      "SOLANA_PUBLIC_KEY": {
        "type": "string",
        "description": "Alternative name accepted by runtime for the wallet's public key.",
        "required": false,
        "sensitive": false
      },
      "SLIPPAGE": {
        "type": "string",
        "description": "Maximum acceptable slippage (likely as a percentage or basis points) for Solana swaps/transactions.",
        "required": true,
        "sensitive": false
      },
      "HELIUS_API_KEY": {
        "type": "string",
        "description": "API key for accessing the Helius Solana infrastructure services.",
        "required": true,
        "sensitive": true
      },
      "BIRDEYE_API_KEY": {
        "type": "string",
        "description": "API key for accessing Birdeye market data services.",
        "required": true,
        "sensitive": true
      },
      "SOLANA_PRIVATE_KEY": {
        "type": "string",
        "description": "The Solana wallet private key in base58 or base64 format, used to create a Keypair when private key access is required.",
        "required": false,
        "sensitive": true
      },
      "WALLET_PRIVATE_KEY": {
        "type": "string",
        "description": "Alternative variable name for the Solana wallet private key in base58 or base64.",
        "required": false,
        "sensitive": true
      }
    }
  }
}
