{
  "id": "fe6cf216-3ff6-4d2c-866e-9f132bc12f13",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.agents": {
      "name": "agents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "characterId": {
          "name": "characterId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "agents_characterId_characters_id_fk": {
          "name": "agents_characterId_characters_id_fk",
          "tableFrom": "agents",
          "tableTo": "characters",
          "columnsFrom": [
            "characterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.cache": {
      "name": "cache",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "agentId": {
          "name": "agentId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "cache_key_agent_unique": {
          "name": "cache_key_agent_unique",
          "nullsNotDistinct": false,
          "columns": [
            "key",
            "agentId"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.characters": {
      "name": "characters",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "system": {
          "name": "system",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "templates": {
          "name": "templates",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "bio": {
          "name": "bio",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "message_examples": {
          "name": "message_examples",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "post_examples": {
          "name": "post_examples",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "topics": {
          "name": "topics",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "adjectives": {
          "name": "adjectives",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "knowledge": {
          "name": "knowledge",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "plugins": {
          "name": "plugins",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "settings": {
          "name": "settings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "style": {
          "name": "style",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.embeddings": {
      "name": "embeddings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "dim_384": {
          "name": "dim_384",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        },
        "dim_512": {
          "name": "dim_512",
          "type": "vector(512)",
          "primaryKey": false,
          "notNull": false
        },
        "dim_768": {
          "name": "dim_768",
          "type": "vector(768)",
          "primaryKey": false,
          "notNull": false
        },
        "dim_1024": {
          "name": "dim_1024",
          "type": "vector(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "dim_1536": {
          "name": "dim_1536",
          "type": "vector(1536)",
          "primaryKey": false,
          "notNull": false
        },
        "dim_3072": {
          "name": "dim_3072",
          "type": "vector(3072)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_embedding_memory": {
          "name": "idx_embedding_memory",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "embeddings_memory_id_memories_id_fk": {
          "name": "embeddings_memory_id_memories_id_fk",
          "tableFrom": "embeddings",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fk_embedding_memory": {
          "name": "fk_embedding_memory",
          "tableFrom": "embeddings",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "embedding_source_check": {
          "name": "embedding_source_check",
          "value": "\"memory_id\" IS NOT NULL"
        }
      },
      "isRLSEnabled": false
    },
    "public.entities": {
      "name": "entities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "agentId": {
          "name": "agentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "names": {
          "name": "names",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "id_agent_id_unique": {
          "name": "id_agent_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id",
            "agentId"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.goals": {
      "name": "goals",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "agentId": {
          "name": "agentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "roomId": {
          "name": "roomId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "objectives": {
          "name": "objectives",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "goals_userId_entities_id_fk": {
          "name": "goals_userId_entities_id_fk",
          "tableFrom": "goals",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "goals_agentId_agents_id_fk": {
          "name": "goals_agentId_agents_id_fk",
          "tableFrom": "goals",
          "tableTo": "agents",
          "columnsFrom": [
            "agentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "goals_roomId_rooms_id_fk": {
          "name": "goals_roomId_rooms_id_fk",
          "tableFrom": "goals",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fk_room": {
          "name": "fk_room",
          "tableFrom": "goals",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_user": {
          "name": "fk_user",
          "tableFrom": "goals",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.logs": {
      "name": "logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "body": {
          "name": "body",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "roomId": {
          "name": "roomId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "logs_userId_entities_id_fk": {
          "name": "logs_userId_entities_id_fk",
          "tableFrom": "logs",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "logs_roomId_rooms_id_fk": {
          "name": "logs_roomId_rooms_id_fk",
          "tableFrom": "logs",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fk_room": {
          "name": "fk_room",
          "tableFrom": "logs",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_user": {
          "name": "fk_user",
          "tableFrom": "logs",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memories": {
      "name": "memories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "agentId": {
          "name": "agentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "roomId": {
          "name": "roomId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "unique": {
          "name": "unique",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "idx_memories_type_room": {
          "name": "idx_memories_type_room",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "roomId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_memories_metadata_type": {
          "name": "idx_memories_metadata_type",
          "columns": [
            {
              "expression": "((metadata->>'type'))",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_memories_document_id": {
          "name": "idx_memories_document_id",
          "columns": [
            {
              "expression": "((metadata->>'documentId'))",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_fragments_order": {
          "name": "idx_fragments_order",
          "columns": [
            {
              "expression": "((metadata->>'documentId'))",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            },
            {
              "expression": "((metadata->>'position'))",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "memories_userId_entities_id_fk": {
          "name": "memories_userId_entities_id_fk",
          "tableFrom": "memories",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "memories_agentId_agents_id_fk": {
          "name": "memories_agentId_agents_id_fk",
          "tableFrom": "memories",
          "tableTo": "agents",
          "columnsFrom": [
            "agentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "memories_roomId_rooms_id_fk": {
          "name": "memories_roomId_rooms_id_fk",
          "tableFrom": "memories",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fk_room": {
          "name": "fk_room",
          "tableFrom": "memories",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_user": {
          "name": "fk_user",
          "tableFrom": "memories",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_agent": {
          "name": "fk_agent",
          "tableFrom": "memories",
          "tableTo": "entities",
          "columnsFrom": [
            "agentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "fragment_metadata_check": {
          "name": "fragment_metadata_check",
          "value": "\n            CASE \n                WHEN metadata->>'type' = 'fragment' THEN\n                    metadata ? 'documentId' AND \n                    metadata ? 'position'\n                ELSE true\n            END\n        "
        },
        "document_metadata_check": {
          "name": "document_metadata_check",
          "value": "\n            CASE \n                WHEN metadata->>'type' = 'document' THEN\n                    metadata ? 'timestamp'\n                ELSE true\n            END\n        "
        }
      },
      "isRLSEnabled": false
    },
    "public.participants": {
      "name": "participants",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "roomId": {
          "name": "roomId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "agentId": {
          "name": "agentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "roomState": {
          "name": "roomState",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_participants_user": {
          "name": "idx_participants_user",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_participants_room": {
          "name": "idx_participants_room",
          "columns": [
            {
              "expression": "roomId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "participants_userId_entities_id_fk": {
          "name": "participants_userId_entities_id_fk",
          "tableFrom": "participants",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "participants_roomId_rooms_id_fk": {
          "name": "participants_roomId_rooms_id_fk",
          "tableFrom": "participants",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "participants_agentId_agents_id_fk": {
          "name": "participants_agentId_agents_id_fk",
          "tableFrom": "participants",
          "tableTo": "agents",
          "columnsFrom": [
            "agentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fk_room": {
          "name": "fk_room",
          "tableFrom": "participants",
          "tableTo": "rooms",
          "columnsFrom": [
            "roomId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_user": {
          "name": "fk_user",
          "tableFrom": "participants",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.relationships": {
      "name": "relationships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "userA": {
          "name": "userA",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userB": {
          "name": "userB",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "agentId": {
          "name": "agentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_relationships_users": {
          "name": "idx_relationships_users",
          "columns": [
            {
              "expression": "userA",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "userB",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "relationships_userA_entities_id_fk": {
          "name": "relationships_userA_entities_id_fk",
          "tableFrom": "relationships",
          "tableTo": "entities",
          "columnsFrom": [
            "userA"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "relationships_userB_entities_id_fk": {
          "name": "relationships_userB_entities_id_fk",
          "tableFrom": "relationships",
          "tableTo": "entities",
          "columnsFrom": [
            "userB"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "relationships_agentId_agents_id_fk": {
          "name": "relationships_agentId_agents_id_fk",
          "tableFrom": "relationships",
          "tableTo": "agents",
          "columnsFrom": [
            "agentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "relationships_userId_entities_id_fk": {
          "name": "relationships_userId_entities_id_fk",
          "tableFrom": "relationships",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fk_user_a": {
          "name": "fk_user_a",
          "tableFrom": "relationships",
          "tableTo": "entities",
          "columnsFrom": [
            "userA"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_user_b": {
          "name": "fk_user_b",
          "tableFrom": "relationships",
          "tableTo": "entities",
          "columnsFrom": [
            "userB"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_user": {
          "name": "fk_user",
          "tableFrom": "relationships",
          "tableTo": "entities",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.rooms": {
      "name": "rooms",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "agentId": {
          "name": "agentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "serverId": {
          "name": "serverId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "worldId": {
          "name": "worldId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "channelId": {
          "name": "channelId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "rooms_agentId_agents_id_fk": {
          "name": "rooms_agentId_agents_id_fk",
          "tableFrom": "rooms",
          "tableTo": "agents",
          "columnsFrom": [
            "agentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "rooms_worldId_worlds_id_fk": {
          "name": "rooms_worldId_worlds_id_fk",
          "tableFrom": "rooms",
          "tableTo": "worlds",
          "columnsFrom": [
            "worldId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.worlds": {
      "name": "worlds",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "agentId": {
          "name": "agentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "serverId": {
          "name": "serverId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamptz",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}