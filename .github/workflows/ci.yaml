name: ci

# Cancel previous runs for the same PR/branch
concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  # Setup job - installs dependencies once and caches them
  setup:
    # Skip duplicate runs: run on push to main, or on pull_request events only
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref_name == 'main')
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Cache installed dependencies
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: deps-${{ runner.os }}-${{ github.sha }}

  # Test job - runs in parallel
  test:
    # Skip duplicate runs: run on push to main, or on pull_request events only
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref_name == 'main')
    needs: setup
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
      PGLITE_WASM_MODE: node
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: deps-${{ runner.os }}-${{ github.sha }}

      - name: Create test env file
        run: |
          echo "TEST_DATABASE_CLIENT=pglite" > packages/core/.env.test
          echo "NODE_ENV=test" >> packages/core/.env.test

      - name: Run tests
        run: cd packages/core && bun test:coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # Lint and format job - runs in parallel
  lint-and-format:
    # Skip duplicate runs: run on push to main, or on pull_request events only
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref_name == 'main')
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: deps-${{ runner.os }}-${{ github.sha }}

      - name: Check format
        run: bun run format:check

      - name: Run lint
        run: bun run lint

  # Build job - runs in parallel
  build:
    # Skip duplicate runs: run on push to main, or on pull_request events only
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref_name == 'main')
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: deps-${{ runner.os }}-${{ github.sha }}

      - name: Build packages
        run: bun run build && bun run build:docs
