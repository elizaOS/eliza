export default [
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "pendleMarket", type: "address" },
          { internalType: "uint8", name: "slippage", type: "uint8" },
          { internalType: "address", name: "ptToken", type: "address" },
          { internalType: "address", name: "ibToken", type: "address" },
        ],
        internalType: "struct PendleMarketAdapter.PoolInput[]",
        name: "poolsData",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "ApproximationFailed", type: "error" },
  { inputs: [], name: "InsufficientAmount", type: "error" },
  {
    inputs: [{ internalType: "int256", name: "exchangeRate", type: "int256" }],
    name: "MarketExchangeRateBelowOne",
    type: "error",
  },
  { inputs: [], name: "MarketExpired", type: "error" },
  { inputs: [], name: "MarketProportionMustNotEqualOne", type: "error" },
  {
    inputs: [
      { internalType: "int256", name: "proportion", type: "int256" },
      { internalType: "int256", name: "maxProportion", type: "int256" },
    ],
    name: "MarketProportionTooHigh",
    type: "error",
  },
  {
    inputs: [{ internalType: "int256", name: "rateScalar", type: "int256" }],
    name: "MarketRateScalarBelowZero",
    type: "error",
  },
  {
    inputs: [
      { internalType: "int256", name: "totalPt", type: "int256" },
      { internalType: "int256", name: "totalAsset", type: "int256" },
    ],
    name: "MarketZeroTotalPtOrTotalAsset",
    type: "error",
  },
  { inputs: [], name: "NotSupported", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "TooMuchRequested", type: "error" },
  { inputs: [], name: "UnknownPair", type: "error" },
  { inputs: [], name: "WrongPoolInput", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "ptToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ibToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pendleMarket",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "slippage",
        type: "uint8",
      },
    ],
    name: "NewPair",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "pendleMarket", type: "address" },
          { internalType: "uint8", name: "slippage", type: "uint8" },
          { internalType: "address", name: "ptToken", type: "address" },
          { internalType: "address", name: "ibToken", type: "address" },
        ],
        internalType: "struct PendleMarketAdapter.PoolInput[]",
        name: "poolsData",
        type: "tuple[]",
      },
    ],
    name: "addPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "getPoolData",
    outputs: [
      { internalType: "address", name: "pendleMarket", type: "address" },
      { internalType: "uint8", name: "slippage", type: "uint8" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenA", type: "address" },
      { internalType: "address", name: "tokenB", type: "address" },
      { internalType: "address", name: "recipient", type: "address" },
    ],
    name: "redeemDust",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "int256", name: "ptToAccount", type: "int256" },
      { internalType: "int256", name: "syToAccount", type: "int256" },
      { internalType: "bytes", name: "_data", type: "bytes" },
    ],
    name: "swapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "recipient", type: "address" },
      { internalType: "address", name: "tokenIn", type: "address" },
      { internalType: "address", name: "tokenOut", type: "address" },
      { internalType: "uint256", name: "amountIn", type: "uint256" },
      { internalType: "uint256", name: "minAmountOut", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "swapExactInput",
    outputs: [{ internalType: "uint256", name: "amountOut", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "recipient", type: "address" },
      { internalType: "address", name: "tokenIn", type: "address" },
      { internalType: "address", name: "tokenOut", type: "address" },
      { internalType: "uint256", name: "maxAmountIn", type: "uint256" },
      { internalType: "uint256", name: "amountOut", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "swapExactOutput",
    outputs: [{ internalType: "uint256", name: "amountIn", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;
